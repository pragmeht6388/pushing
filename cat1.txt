[HttpGet("UserInformation/{userId}")]
public DataTransferObject.User UserInformation(int userId,[FromHeader(Name = "Authorization")] string jwtToken)
{
    _log.Info("UserInformation method called.");
    var phone = HttpContext.User.FindFirstValue("phone_number");

    DataTransferObject.User userInformation = null;
    var adfsIssuer = Utilities.GetAppConfig<string>(Constants.AdfsIssuer);
    var openiddictIssuer = Utilities.GetAppConfig<string>(Consts.MY_OPENIDDICT_ISS);
    try
    {
        dynamic user = Helper.GetUserFromClaims(User.Identity).ToDynamic();
        if (user.issuer == adfsIssuer)
        {
            var role = ((string)user.Role).ToUpperInvariant();
            UserService.UpdateUserInfoFromMyAld(user);
            userInformation = UserService.GetUser((string)user.EmailId, (string)user.Country);
            userInformation.Role = role;
            _log.Info("No Exeception caught in UserInformation method");
        }
        else if (user.issuer == openiddictIssuer)
        {
            var role = ((string)user.Role).ToUpperInvariant();
            userInformation = UserService.GetUser(user.EmailId, user.Country);

            if (userInformation != null)
            {
                userInformation.MobileNumber = phone;
                UserService.UpdateUser(userInformation);

            }

            if (userInformation == null && !string.IsNullOrEmpty(user.Client.Value))
            {
                var userDto = new UserDTO
                {
                    UserId = 0,
                    FirstName = (string)user.EmailId,
                    LastName = string.Empty,
                    UserName = (string)user.EmailId,
                    Password = string.Empty,
                    Email = (string)user.EmailId,
                    TelephoneNo = phone,                            
                    CustomerNumber = Convert.ToInt32(user.Client.Value)
                };
                
                var carPolicyId = UserService.GetDefaultCarpolicyId(userDto.CustomerNumber.ToString().PadLeft(6, '0'), 20, jwtToken);
                if (carPolicyId.Result > 0)
                {
                    var userid = UserService.CreateALDFirstUser(userDto);
                    if (userid > 0)
                    {
                        var usercarpolicyid = UserService.SaveUserCarPolicyDefault(userid, carPolicyId.Result);
                        userInformation.MobileNumber = phone;
                        UserService.UpdateUser(userInformation);
                        userInformation = UserService.GetUser((string)user.EmailId, (string)user.Country);

                    }
                }
            }
            if (userInformation != null)
                userInformation.Role = role;
            _log.Info("No Exeception caught in ALDFirstUserInformation method");
        }

    }
    catch (Exception ex)
    {
        var environment = Utilities.GetAppConfig<string>(Constants.Environment);
        if (environment == Constants.DEVELOPMENT)
        {
            userInformation = UserService.GetUser(userId, 20);
        }
        else
        {
            _log.Debug(ex, "Exception in UserInformation");
        }
    }
    _log.Info("UserInformation method call completed.");
    return userInformation;
}



Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed. (csharpsquid:S3776 )
