   public static async Task<U> PostAsync<T, U>(this HttpClient client, string actionName, T inputObject)
   {
       _logger.Debug("PostAsync method called. With 3 paramters.");
       var json = JsonConvert.SerializeObject(inputObject);
       var requestUrl = new Uri(client.BaseAddress.AbsoluteUri + @"/" + actionName);

       var http = (HttpWebRequest)WebRequest.Create(requestUrl);
       http.Proxy = new WebProxy();
       http.Accept = "application/json";
       http.ContentType = "application/json";
       http.Method = "POST";

       string parsedContent = json;
       ASCIIEncoding encoding = new ASCIIEncoding();
       byte[] bytes = encoding.GetBytes(parsedContent);

       Stream newStream = await http.GetRequestStreamAsync();
       newStream.Write(bytes, 0, bytes.Length);
       newStream.Close();

       var response = await http.GetResponseAsync();

       var stream = response.GetResponseStream();
       var sr = new StreamReader(stream);
       var content = await sr.ReadToEndAsync();
       _logger.Debug($"Post Async log for raw resposne {content}");
       var responseObject = JsonConvert.DeserializeObject<U>(content);
       _logger.Debug("PostAsync method call completed");
       return responseObject;
   }

ALDQuote.Quotation.Business/ProxyClass.cs
